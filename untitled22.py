# -*- coding: utf-8 -*-
"""Untitled22.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1r2lPbwYlzaFWOm33JG5y3P90MdKweYoA
"""

import streamlit as st
import os
from ultralytics import YOLO

# Initialize the YOLO model
model = YOLO(r"C:\user\Documents\ML_Project\Insulator\best.pt")

# Streamlit app
st.title("YOLO Object Detection with Streamlit")

# Create a file uploader for image
uploaded_image = st.file_uploader("Upload an image", type=["jpg", "jpeg", "png", "gif", "bmp"])

if uploaded_image is not None:
    # Create a temporary directory to store the image
    temp_dir = "temp_image"
    os.makedirs(temp_dir, exist_ok=True)
    image_path = os.path.join(temp_dir, uploaded_image.name)
    with open(image_path, "wb") as f:
        f.write(uploaded_image.read())

    # Perform detection on the uploaded image
    detection_result = model.predict(image_path, save=True, save_txt=True)

    # Display the detection result
    st.image(detection_result.imgs[0], use_column_width=True)

    # Provide a download link for the result
    st.markdown(f"**Download Result**: [Result.zip]({detection_result.exported})")

    # Clean up temporary files
    if os.path.exists(temp_dir):
        for file in os.listdir(temp_dir):
            file_path = os.path.join(temp_dir, file)
            if os.path.isfile(file_path):
                os.unlink(file_path)
        os.rmdir(temp_dir)